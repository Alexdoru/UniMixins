archivesBaseName = archivesBaseName.replace("-1.7.10", "-all-1.7.10")

ext.moduleNames = ["module-mixin", "module-spongemixins", "module-compat"]

def getModuleJars() {
	return moduleNames.collect { it -> tasks.getByPath(":$it:jar").getOutputs().getFiles().getSingleFile() }
}

task createMergedMcmodInfo() {
	outputs.file("build/tmp/mcmod.info")
	doLast {
		def mergedJson = []
		getModuleJars().each {
			j ->
				def json = new groovy.json.JsonSlurper().parseText(zipTree(j).matching { include 'mcmod.info' }.getSingleFile().text)
				mergedJson += json
		}
		
		def desc = mergedJson.collect{ "* " + it.name + "\n" }.join("")
		mergedJson[0].name = "UniMixins"
		mergedJson[0].description = "UniMixins composite jar consisting of the following modules:\n" + desc
		mergedJson[0].version = version
		
		file("build/tmp/mcmod.info").text = groovy.json.JsonOutput.prettyPrint(groovy.json.JsonOutput.toJson(mergedJson))
		return file("build/tmp/mcmod.info")
	}
	
	moduleNames.each { dependsOn tasks.getByPath(":$it:build") }
}

jar {
	dependsOn tasks.createMergedMcmodInfo
	
	getModuleJars().each {
		j -> from zipTree(j).matching {
			exclude 'mcmod.info'
			exclude 'META-INF/MANIFEST.MF'
		}
	}
	
	from tasks.createMergedMcmodInfo.getOutputs().getFiles().getSingleFile()
	
	//archiveFileName = tasks.jar.archiveFileName
	//destinationDirectory = tasks.jar.destinationDirectory
	
	manifest {
		attributes (
			'TweakClass': 'org.spongepowered.asm.launch.MixinTweaker',
			'FMLCorePluginContainsFMLMod': true,
			'ForceLoadAsMod': true,
			'FMLCorePlugin': 'io.github.legacymoddingmc.unimixins.core.UniMixinsCore',
			'Embedded-Jars': getModuleJars().collect { it.name }.join(' ')
		)
	}
}

clean {
	moduleNames.each { dependsOn tasks.getByPath(":$it:clean") }
}

reobf.enabled = false
